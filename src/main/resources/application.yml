server:
  port: 8081
spring:
  datasource:
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/quzrtz-db?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&allowMultiQueries=true&useSSL=false
      username: root
      password: root123
      initial-size: 1
      min-idle: 1
      max-active: 10
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      test-on-return: false
      test-while-idle: true
      test-on-borrow: false
      validation-query: SELECT 1
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    auto-startup: true
    scheduler-name: springboot-quartz-perseverance
    properties:
      org:
        quartz:
          scheduler:
            instanceId: AUTO
            instanceName: ClusterQuartz
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX # 数据保存方式为数据库持久化
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate # 数据库代理类，一般org.quartz.impl.jdbcjobstore.StdJDBCDelegate可以满足大部分数据库
            tablePrefix: QRTZ_ # 表的前缀，默认QRTZ_
            useProperties: false # JobDataMaps是否都为String类型，默认false
            isClustered: true # 是否加入集群
            misfireThreshold: 65000 #在被认为“失火”之前，调度程序将“容忍”一个Triggers将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）。
            clusterCheckinInterval: 5000 # 调度实例失效的检查时间间隔 ms
            txIsolationLevelReadCommitted: true # 当设置为“true”时，此属性告诉Quartz 在非托管JDBC连接上调用setTransactionIsolation（Connection.TRANSACTION_READ_COMMITTED）。
          threadPoll:
            class: org.quartz.simpl.SimpleThreadPool  # 线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）
            threadCount: 10 # 指定线程数，一般设置为1-100直接的整数，根据系统资源配置
            #threadPriority: 5 # 设置线程的优先级(可以是Thread.MIN_PRIORITY（即1）和Thread.MAX_PRIORITY（这是10）之间的任何int 。默认值为Thread.NORM_PRIORITY（5）。)
            threadsInheritContextClassLoaderOfInitializingThread: true
